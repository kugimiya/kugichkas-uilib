{"version":3,"sources":["components/UI/Checkbox/Checkbox.js","components/UI/TextInput/TextInput.js","App.js","index.js"],"names":["Checkbox","active","disabled","error","errorTip","customStylesContainer","children","onChange","console","errorTipContainer","className","style","classname","checkbox__inner","type","checked","TextInput","placeholder","value","undefined","defaultValue","onInput","event","target","ExampleContainer","TextInputExample","val","log","maxWidth","CheckboxExample","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf03819e.chunk.js","sourcesContent":["import React from 'react';\nimport classname from 'classname';\nimport PropTypes from 'prop-types';\nimport './Checkbox.scss';\n\n/**\n * Simple checkbox component\n */\nexport function Checkbox({\n  active = false,\n  disabled = false,\n  error = false,\n  errorTip = 'Что-то пошло не так',\n  customStylesContainer = {},\n  children = 'Checkbox text',\n  onChange = () => { console.error('onChange callback missed!') },\n}) {\n  const errorTipContainer = error\n    ? (\n      <div className={ `checkbox__error-container` }>\n        { errorTip }\n      </div>\n    )\n    : null;\n\n  return (\n    <div className='checkbox' style={ customStylesContainer }>\n      <label\n        className={ classname({\n          checkbox__inner: true,\n          'checkbox__inner--disabled': disabled,\n          'checkbox__inner--active': active,\n          'checkbox__inner--error': error\n        }) }\n      >\n        <input\n          className='checkbox__tag'\n          type='checkbox'\n          checked={ active }\n          disabled={ disabled }\n          onChange={ onChange }\n        />\n        <span className='checkbox__content'>{ children }</span>\n      </label>\n      { errorTipContainer }\n    </div>\n  );\n}\n\nCheckbox.propTypes = {\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  errorTip: PropTypes.node,\n  customStylesContainer: PropTypes.object,\n  children: PropTypes.node,\n  onChange: PropTypes.func\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TextInput.scss';\n\n/**\n * Simple text input component with flow-placeholder and mobile-ready\n */\nexport function TextInput({\n  placeholder = 'Input placeholder',\n  value = undefined,\n  disabled = false,\n  error = false,\n  errorTip = 'Something went wrong',\n  onChange = () => { console.error('onChange callback missed!') },\n  customStylesContainer = {}\n}) {\n  const errorTipContainer = error\n    ? (\n      <div className={ `text-input__error-container` }>\n        { errorTip }\n      </div>\n    )\n    : null;\n\n  return (\n    <div className='text-input' style={ customStylesContainer }>\n      <div className={ `text-input__inner${ error ? ' text-input__inner--error' : '' }${ disabled ? ' text-input__inner--disabled' : '' }` }>\n        <input\n          className={ `text-input__tag${ error ? ' text-input__tag--error' : '' }${ disabled ? ' text-input__tag--disabled' : '' }` }\n          type='text'\n          placeholder=' '\n          defaultValue={ value }\n          onInput={ event => onChange(event.target.value) }\n          disabled={ disabled }\n        />\n        <span className={ `text-input__placeholder${ error ? ' text-input__placeholder--error' : '' }${ disabled ? ' text-input__placeholder--disabled' : '' }` }>{ placeholder }</span>\n      </div>\n      { errorTipContainer }\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  /**\n   * Placeholder; not input-tag attribute!\n   */\n  placeholder: PropTypes.node,\n  /**\n   * Value; will be used in input-tag as defaultValue\n   */\n  value: PropTypes.string,\n  /**\n   * If passed in props, input will be marked as disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If passed in props, input will be marked as errored\n   */\n  error: PropTypes.bool,\n  /**\n   * Error text, can be string or another component\n   */\n  errorTip: PropTypes.node,\n  /**\n   * Callback, will be used as onInput at input-tag\n   */\n  onChange: PropTypes.func,\n  /**\n   * custom styles for main container, example: `{ maxWidth: 'unset' }`\n   */\n  customStylesContainer: PropTypes.object,\n};","import React from 'react';\nimport { Checkbox } from './components/UI/Checkbox/Checkbox';\nimport { TextInput } from './components/UI/TextInput/TextInput';\nimport './App.css';\n\nfunction ExampleContainer({ children }) {\n  return (\n    <div className='example-container'>\n      { children }\n    </div>\n  );\n}\n\nfunction TextInputExample() {\n  return (\n    <ExampleContainer>\n      <h3>TextInput component examples</h3>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов'\n        disabled\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов'\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        error\n        errorTip={ (\n          <>\n            <span>Поле не может быть пустым! </span>\n            <br />\n            <span>Укажите фамилию, например <b>Горюнов</b></span>\n          </>\n        ) }\n        onChange={ value => console.log(value) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов111'\n        error\n        errorTip={ 'Фамилия не может содержать символы, отличные от букв' }\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br />\n\n      <TextInput\n        placeholder='420px width'\n        customStylesContainer={ { maxWidth: '420px' } }\n        onChange={ val => console.log({ val }) }\n      />\n    </ExampleContainer>\n  )\n}\n\nfunction CheckboxExample() {\n  return (\n    <ExampleContainer>\n      <h3>Checkbox component examples</h3>\n\n      <Checkbox>Учитывать все цены</Checkbox>\n\n      <br />\n\n      <Checkbox active>Учитывать <b>все цены</b></Checkbox>\n\n      <br />\n\n      <Checkbox disabled>Учитывать все цены</Checkbox>\n\n      <br />\n\n      <Checkbox active disabled>Учитывать <b>все цены</b></Checkbox>\n\n      <br />\n\n      <Checkbox\n        error\n        errorTip='Вы должны быть согласны :^)'\n      >Я согласен с правилами сервиса</Checkbox>\n\n      <br />\n\n      <Checkbox\n        error\n        errorTip={\n          <b>Это обязательное поле!</b>\n        }\n      >Я согласен с правилами сервиса</Checkbox>\n    </ExampleContainer>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <a href='styleguide/index.html'>Go to styleguide page (extended documentation)</a>\n\n      <hr />\n\n      <div className='examples'>\n        <TextInputExample />\n        <CheckboxExample />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}