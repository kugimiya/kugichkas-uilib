{"version":3,"sources":["components/UI/TextInput/TextInput.js","App.js","index.js"],"names":["TextInput","placeholder","value","undefined","disabled","error","errorTip","onChange","console","customStylesContainer","errorTipContainer","className","style","type","defaultValue","onInput","event","target","App","href","val","log","maxWidth","ReactDOM","render","document","getElementById"],"mappings":"wOAOO,SAASA,EAAT,GAQH,IAAD,IAPDC,mBAOC,MAPa,oBAOb,MANDC,aAMC,WANOC,EAMP,MALDC,gBAKC,aAJDC,aAIC,aAHDC,gBAGC,MAHU,uBAGV,MAFDC,gBAEC,MAFU,WAAQC,QAAQH,MAAM,8BAEhC,MADDI,6BACC,MADuB,GACvB,EACKC,EAAoBL,EAEtB,yBAAKM,UAAS,+BACVL,GAGJ,KAEJ,OACE,yBAAKK,UAAU,aAAaC,MAAQH,GAClC,yBAAKE,UAAS,2BAAwBN,EAAQ,4BAA8B,IAA9D,OAAqED,EAAW,+BAAiC,KAC7H,2BACEO,UAAS,yBAAsBN,EAAQ,0BAA4B,IAA1D,OAAiED,EAAW,6BAA+B,IACpHS,KAAK,OACLZ,YAAY,IACZa,aAAeZ,EACfa,QAAU,SAAAC,GAAK,OAAIT,EAASS,EAAMC,OAAOf,QACzCE,SAAWA,IAEb,0BAAMO,UAAS,iCAA8BN,EAAQ,kCAAoC,IAA1E,OAAiFD,EAAW,qCAAuC,KAAUH,IAE5JS,G,KCqCOQ,MAtEf,WACE,OACE,yBAAKP,UAAU,OACb,uBAAGQ,KAAK,yBAAR,kDAEA,6BAEA,4DAEA,kBAAC,EAAD,CACElB,YAAY,0GACZC,MAAM,6CACNE,UAAQ,EACRG,SAAW,SAAAa,GAAG,OAAIZ,QAAQa,IAAI,CAAED,WAGlC,6BAEA,kBAAC,EAAD,CACEnB,YAAY,0GACZM,SAAW,SAAAa,GAAG,OAAIZ,QAAQa,IAAI,CAAED,WAGlC,6BAEA,kBAAC,EAAD,CACEnB,YAAY,0GACZC,MAAM,6CACNK,SAAW,SAAAa,GAAG,OAAIZ,QAAQa,IAAI,CAAED,WAGlC,6BAEA,kBAAC,EAAD,CACEnB,YAAY,0GACZI,OAAK,EACLC,SACE,oCACE,2KAEA,6BACA,yKAAgC,2EAGpC,SAAW,SAAAJ,GAAK,OAAIM,QAAQa,IAAInB,MAGlC,6BAEA,kBAAC,EAAD,CACE,YAAY,0GACZ,MAAM,gDACNG,OAAK,EACL,SAAW,mRACX,SAAW,SAAAe,GAAG,OAAIZ,QAAQa,IAAI,CAAED,WAGlC,6BAEA,kBAAC,EAAD,CACE,YAAY,cACZ,sBAAwB,CAAEE,SAAU,SACpC,SAAW,SAAAF,GAAG,OAAIZ,QAAQa,IAAI,CAAED,WAGlC,+BChENG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.405f9f50.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TextInput.scss';\n\n/**\n * Simple text input component with flow-placeholder and mobile-ready\n */\nexport function TextInput({\n  placeholder = 'Input placeholder',\n  value = undefined,\n  disabled = false,\n  error = false,\n  errorTip = 'Something went wrong',\n  onChange = () => { console.error('onChange callback missed!') },\n  customStylesContainer = {}\n}) {\n  const errorTipContainer = error\n    ? (\n      <div className={ `text-input__error-container` }>\n        { errorTip }\n      </div>\n    )\n    : null;\n\n  return (\n    <div className='text-input' style={ customStylesContainer }>\n      <div className={ `text-input__inner${ error ? ' text-input__inner--error' : '' }${ disabled ? ' text-input__inner--disabled' : '' }` }>\n        <input\n          className={ `text-input__tag${ error ? ' text-input__tag--error' : '' }${ disabled ? ' text-input__tag--disabled' : '' }` }\n          type='text'\n          placeholder=' '\n          defaultValue={ value }\n          onInput={ event => onChange(event.target.value) }\n          disabled={ disabled }\n        />\n        <span className={ `text-input__placeholder${ error ? ' text-input__placeholder--error' : '' }${ disabled ? ' text-input__placeholder--disabled' : '' }` }>{ placeholder }</span>\n      </div>\n      { errorTipContainer }\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  /**\n   * Placeholder; not input-tag attribute!\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Value; will be used in input-tag as defaultValue\n   */\n  value: PropTypes.string,\n  /**\n   * If passed in props, input will be marked as disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If passed in props, input will be marked as errored\n   */\n  error: PropTypes.bool,\n  /**\n   * Error text, can be string or another component\n   */\n  errorTip: PropTypes.oneOfType([ PropTypes.string, PropTypes.object ]),\n  /**\n   * Callback, will be used as onInput at input-tag\n   */\n  onChange: PropTypes.func,\n  /**\n   * custom styles for main container, example: `{ maxWidth: 'unset' }`\n   */\n  customStylesContainer: PropTypes.object,\n};","import React from 'react';\nimport { TextInput } from './components/UI/TextInput/TextInput';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <a href='styleguide/index.html'>Go to styleguide page (extended documentation)</a>\n\n      <hr />\n\n      <h3>TextInput component examples</h3>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов'\n        disabled\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов'\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        error\n        errorTip={ (\n          <>\n            <span>Поле не может быть пустым! </span>\n            <br />\n            <span>Укажите фамилию, например <b>Горюнов</b></span>\n          </>\n        ) }\n        onChange={ value => console.log(value) }\n      />\n\n      <br/>\n\n      <TextInput\n        placeholder='Фамилия сотрудника'\n        value='Горюнов111'\n        error\n        errorTip={ 'Фамилия не может содержать символы, отличные от букв' }\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br />\n\n      <TextInput\n        placeholder='420px width'\n        customStylesContainer={ { maxWidth: '420px' } }\n        onChange={ val => console.log({ val }) }\n      />\n\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}